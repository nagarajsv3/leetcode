class Solution {
    
    // Function to detect cycle in an undirected graph.
    public boolean isCycleDFS(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        
        boolean[] visited = new boolean[V];
        for(int i=0;i<V;i++){
            if(visited[i] == false){
                if(dfs(i, -1, visited, adj)){
                    return true;                
                }
            }
        }
        return false;
    }
    
    boolean dfs(int node, int parent, boolean[] visited, ArrayList<ArrayList<Integer>> adj){
        visited[node] = true;
        
        for(int neigh : adj.get(node)){
            if(visited[neigh] == true){
                if(neigh != parent){
                    return true;
                }
            }else{
                if(dfs(neigh, node, visited, adj)){
                    return true;
                }
            }
        }
        
        return false;
    }
    
}
